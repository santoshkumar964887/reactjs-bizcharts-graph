{"version":3,"sources":["HistogramGraph.jsx","PieChart.jsx","HistogramTwoColumnChart.jsx","LinearGradient.js","IndiaChart.jsx","HorizontalBarChart.jsx","main.jsx","index.js"],"names":["registerTheme","defaultColor","colors10","geometries","interval","rect","default","style","fill","fillOpacity","active","stroke","lineWidth","inactive","strokeOpacity","selected","data","name","month","avgRainfall","HistogramGraph","height","width","padding","autoFit","filter","val","adjust","type","marginRatio","color","position","shared","value","registerShape","draw","cfg","container","points","path","push","x","y","this","parsePath","addShape","attrs","SliderChart","radius","innerRadius","visible","showTitle","shape","React","Component","Grouped","LinearGradient","props","boxStyle","margin","gradientStyle","backgroundImage","fromColor","toColor","className","min","max","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","getRandomInt","parseInt","Math","random","geographyStyle","outline","hover","transition","pressed","getHeatMapData","id","state","App","useState","tooltipContent","setTooltipContent","setData","gradientData","length","reduce","item","colorScale","scaleQuantile","domain","map","d","range","onMouseEnter","geo","current","properties","onMouseLeave","projectionConfig","projection","data-tip","geography","geographies","find","s","key","rsmKey","onClick","registerInteraction","start","trigger","action","end","year","sales","Demo","borderRadius","transpose","showMarkers","Main","display","justifyContent","alignItems","flexWrap","IndiaChart","PieChart","HistogramTwoColumnChart","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"skrCASAA,wBAAc,UAAW,CACvBC,aAAc,UAEdC,SAAU,CACR,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,WAAY,CACVC,SAAU,CACRC,KAAM,CACJC,QAAS,CACPC,MAAO,CAAEC,KAAM,UAAWC,YAAa,MAEzCC,OAAQ,CAAEH,MAAO,CAAEI,OAAQ,UAAWC,UAAW,IACjDC,SAAU,CAAEN,MAAO,CAAEE,YAAa,GAAKK,cAAe,KACtDC,SAAU,QAMlB,IAAMC,EAAO,CACX,CAAEC,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,SAAUC,MAAO,MAAOC,YAAa,IAC7C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,IAC9C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,KAAM,QAASC,MAAO,MAAOC,YAAa,IAC5C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,IAC7C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,SAAUC,MAAO,MAAOC,YAAa,MAC7C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,KAC7C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,KAAM,QAASC,MAAO,MAAOC,YAAa,MAC5C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,OAwChCC,MA5Bf,WACE,OACE,6BACE,kBAAC,QAAD,CACEC,OAAQ,IACRC,MAAO,IACPC,QAAQ,OACRP,KAAMA,EACNQ,SAAO,EACPC,OAAQ,CAAC,CAAC,cAAe,SAACC,GAAD,OAAgB,MAAPA,MAElC,kBAAC,WAAD,CACEC,OAAQ,CACN,CACEC,KAAM,QACNC,YAAa,IAGjBC,MAAM,OACNC,SAAS,sBAEX,kBAAC,UAAD,CAASC,QAAM,IACf,kBAAC,cAAD,CAAaJ,KAAK,qB,gCC5F1B5B,wBAAc,UAAW,CACvBC,aAAc,UAEdC,SAAU,CACR,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,WAAY,CACVC,SAAU,CACRC,KAAM,CACJC,QAAS,CACPC,MAAO,CAAEC,KAAM,UAAWG,OAAQ,MAAOF,YAAa,MAExDC,OAAQ,CAAEH,MAAO,CAAEI,OAAQ,UAAWC,UAAW,IACjDC,SAAU,CAAEN,MAAO,CAAEE,YAAa,GAAKK,cAAe,KACtDC,SAAU,QAKlB,IAAMC,EAAO,CACX,CACEY,KAAM,YACNK,MAAO,IAET,CACEL,KAAM,YACNK,MAAO,IAET,CACEL,KAAM,YACNK,MAAO,IAET,CACEL,KAAM,YACNK,MAAO,KAMXC,wBAAc,WAAY,aAAc,CACtCC,KADsC,SACjCC,EAAKC,GACR,IAAMC,EAASF,EAAIE,OACfC,EAAO,GAOX,OANAA,EAAKC,KAAK,CAAC,IAAKF,EAAO,GAAGG,EAAGH,EAAO,GAAGI,IACvCH,EAAKC,KAAK,CAAC,IAAKF,EAAO,GAAGG,EAAGH,EAAO,GAAGI,EAPvB,IAQhBH,EAAKC,KAAK,CAAC,IAAKF,EAAO,GAAGG,EAAGH,EAAO,GAAGI,EARvB,IAShBH,EAAKC,KAAK,CAAC,IAAKF,EAAO,GAAGG,EAAGH,EAAO,GAAGI,IACvCH,EAAKC,KAAK,KACVD,EAAOI,KAAKC,UAAUL,GACfF,EAAUQ,SAAS,OAAQ,CAChCC,MAAO,CACLtC,KAAM4B,EAAIN,MACVS,KAAMA,Q,IAyBCQ,E,4JAlBb,WACE,OACE,kBAAC,QAAD,CAAO/B,KAAMA,EAAMK,OAAQ,IAAKC,MAAO,IAAKE,SAAO,GACjD,kBAAC,aAAD,CAAYI,KAAK,QAAQoB,OAAQ,GAAKC,YAAa,MACnD,kBAAC,OAAD,CAAMC,SAAS,IACf,kBAAC,UAAD,CAASC,WAAW,IACpB,kBAAC,WAAD,CACExB,OAAO,QACPI,SAAS,QACTD,MAAM,OACNsB,MAAM,eAER,kBAAC,cAAD,CAAaxB,KAAK,iC,GAbAyB,IAAMC,WCvEhCtD,wBAAc,UAAW,CACvBC,aAAc,UAEdC,SAAU,CACR,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,WAAY,CACVC,SAAU,CACRC,KAAM,CACJC,QAAS,CACPC,MAAO,CAAEC,KAAM,UAAWC,YAAa,MAEzCC,OAAQ,CAAEH,MAAO,CAAEI,OAAQ,UAAWC,UAAW,IACjDC,SAAU,CAAEN,MAAO,CAAEE,YAAa,GAAKK,cAAe,KACtDC,SAAU,QAMlB,IAAMC,EAAO,CACX,CAAEC,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,SAAUC,MAAO,MAAOC,YAAa,IAC7C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,IAC9C,CAAEF,KAAM,SAAUC,MAAO,OAAQC,YAAa,MAC9C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,KAAM,QAASC,MAAO,MAAOC,YAAa,IAC5C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,IAC7C,CAAEF,KAAM,QAASC,MAAO,OAAQC,YAAa,OAqDhCoC,MAzCf,WACE,OACE,6BACE,kBAAC,QAAD,CACElC,OAAQ,IACRC,MAAO,IACPC,QAAQ,OACRP,KAAMA,EACNQ,SAAO,EACPC,OAAQ,CACN,CAAC,cAAe,SAACC,GAAD,OAAgB,MAAPA,MAG3B,kBAAC,WAAD,CACEC,OAAQ,CACN,CACEC,KAAM,QACNC,YAAa,IAGjBC,MAAM,OACNC,SAAS,sBAEX,kBAAC,UAAD,CAASC,QAAM,IACf,kBAAC,cAAD,CAAaJ,KAAK,qB,wCC7DX4B,EA1BQ,SAAAC,GAAU,IACvBzC,EAASyC,EAATzC,KACF0C,EAAW,CACfpC,MAAO,IACPqC,OAAQ,QAEJC,EAAgB,CACpBC,gBAAgB,6BAAD,OAA+B7C,EAAK8C,UAApC,cAAmD9C,EAAK+C,QAAxD,KACf1C,OAAQ,IAEV,OACE,6BACE,yBAAKd,MAAOmD,EAAUM,UAAU,gBAC9B,8BAAOhD,EAAKiD,KACZ,0BAAMD,UAAU,SAChB,8BAAOhD,EAAKkD,MAEd,yBAAK3D,MAAK,2BAAOmD,GAAaE,GAAiBI,UAAU,UCdzDG,EAAkBC,EAAQ,IAE1BC,EAAoB,CACxBC,MAAO,IACPC,OAAQ,CAAC,QAAS,UAIdC,EAAc,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,WAKIC,EAAe,WACnB,OAAOC,SAAyB,IAAhBC,KAAKC,WAGjBC,EAAiB,CACrBvE,QAAS,CACPwE,QAAS,QAEXC,MAAO,CACLvE,KAAM,OACNwE,WAAY,YACZF,QAAS,QAEXG,QAAS,CACPH,QAAS,SAKPI,EAAiB,WACrB,MAAO,CACL,CAAEC,GAAI,KAAMC,MAAO,iBAAkBnD,MAAOwC,KAC5C,CAAEU,GAAI,KAAMC,MAAO,oBAAqBnD,MAAOwC,KAC/C,CAAEU,GAAI,KAAMC,MAAO,QAASnD,MAAOwC,KACnC,CAAEU,GAAI,KAAMC,MAAO,QAASnD,MAAOwC,KACnC,CAAEU,GAAI,KAAMC,MAAO,eAAgBnD,MAAOwC,KAC1C,CAAEU,GAAI,KAAMC,MAAO,MAAOnD,MAAO,IACjC,CAAEkD,GAAI,KAAMC,MAAO,UAAWnD,MAAO,IACrC,CAAEkD,GAAI,KAAMC,MAAO,UAAWnD,MAAOwC,KACrC,CAAEU,GAAI,KAAMC,MAAO,mBAAoBnD,MAAO,IAC9C,CAAEkD,GAAI,KAAMC,MAAO,YAAanD,MAAO,IACvC,CAAEkD,GAAI,KAAMC,MAAO,YAAanD,MAAO,IACvC,CAAEkD,GAAI,KAAMC,MAAO,SAAUnD,MAAOwC,KACpC,CAAEU,GAAI,KAAMC,MAAO,iBAAkBnD,MAAOwC,KAC5C,CAAEU,GAAI,KAAMC,MAAO,cAAenD,MAAOwC,KACzC,CAAEU,GAAI,KAAMC,MAAO,UAAWnD,MAAOwC,KACrC,CAAEU,GAAI,KAAMC,MAAO,YAAanD,MAAO,IACvC,CAAEkD,GAAI,KAAMC,MAAO,UAAWnD,MAAOwC,KACrC,CAAEU,GAAI,KAAMC,MAAO,WAAYnD,MAAO,IACtC,CAAEkD,GAAI,KAAMC,MAAO,SAAUnD,MAAO,IACpC,CAAEkD,GAAI,KAAMC,MAAO,SAAUnD,MAAOwC,KACpC,CAAEU,GAAI,KAAMC,MAAO,YAAanD,MAAOwC,KACvC,CAAEU,GAAI,KAAMC,MAAO,SAAUnD,MAAOwC,KACpC,CAAEU,GAAI,KAAMC,MAAO,aAAcnD,MAAOwC,KACxC,CAAEU,GAAI,KAAMC,MAAO,YAAanD,MAAOwC,KACvC,CAAEU,GAAI,KAAMC,MAAO,UAAWnD,MAAO,IACrC,CAAEkD,GAAI,KAAMC,MAAO,cAAenD,MAAOwC,KACzC,CAAEU,GAAI,KAAMC,MAAO,gBAAiBnD,MAAO,IAC3C,CAAEkD,GAAI,KAAMC,MAAO,cAAenD,MAAO,IACzC,CAAEkD,GAAI,KAAMC,MAAO,cAAenD,MAAO,IACzC,CAAEkD,GAAI,KAAMC,MAAO,8BAA+BnD,MAAOwC,KACzD,CAAEU,GAAI,KAAMC,MAAO,aAAcnD,MAAOwC,KACxC,CAAEU,GAAI,KAAMC,MAAO,yBAA0BnD,MAAO,IACpD,CAAEkD,GAAI,KAAMC,MAAO,gBAAiBnD,MAAO,IAC3C,CAAEkD,GAAI,KAAMC,MAAO,QAASnD,MAAO,IACnC,CAAEkD,GAAI,KAAMC,MAAO,oBAAqBnD,MAAO,IAC/C,CAAEkD,GAAI,KAAMC,MAAO,SAAUnD,MAAOwC,KACpC,CAAEU,GAAI,KAAMC,MAAO,cAAenD,MAAOwC,KACzC,CAAEU,GAAI,KAAMC,MAAO,aAAcnD,MAAOwC,OA2E7BY,MAvEf,WAAgB,IAAD,EAC+BC,mBAAS,IADxC,mBACNC,EADM,KACUC,EADV,OAEWF,mBAASJ,KAFpB,mBAENlE,EAFM,KAEAyE,EAFA,KAIPC,EAAe,CACnB5B,UAAWU,EAAY,GACvBT,QAASS,EAAYA,EAAYmB,OAAS,GAC1C1B,IAAK,EACLC,IAAKlD,EAAK4E,QAAO,SAAC1B,EAAK2B,GAAN,OAAgBA,EAAK5D,MAAQiC,EAAM2B,EAAK5D,MAAQiC,IAAM,IAGnE4B,EAAaC,cAChBC,OAAOhF,EAAKiF,KAAI,SAACC,GAAD,OAAOA,EAAEjE,UACzBkE,MAAM3B,GAEH4B,EAAe,SAACC,GAAoC,IAA/BC,EAA8B,uDAApB,CAAErE,MAAO,MAC5C,OAAO,WACLuD,EAAkB,GAAD,OAAIa,EAAIE,WAAWtF,KAAnB,aAA4BqF,EAAQrE,UAInDuE,EAAe,WACnBhB,EAAkB,KAOpB,OACE,yBAAKjF,MAAO,CAAEe,MAAO,QAASD,OAAQ,SACpC,yBAAK2C,UAAU,+BACb,wBAAIA,UAAU,oBAAd,oBACA,kBAAC,IAAD,KAAeuB,GACf,kBAAC,gBAAD,CACEkB,iBAAkBpC,EAClBqC,WAAW,cACXpF,MAAO,IACPD,OAAQ,IACRsF,WAAS,IAET,kBAAC,cAAD,CAAaC,UAAWzC,IACrB,qBAAG0C,YACUZ,KAAI,SAACI,GAEf,IAAMC,EAAUtF,EAAK8F,MAAK,SAACC,GAAD,OAAOA,EAAE5B,KAAOkB,EAAIlB,MAC9C,OACE,kBAAC,YAAD,CACE6B,IAAKX,EAAIY,OACTL,UAAWP,EACX7F,KAAM8F,EAAUR,EAAWQ,EAAQrE,OAlHjC,OAmHF1B,MAAOsE,EACPuB,aAAcA,EAAaC,EAAKC,GAChCE,aAAcA,WAO1B,kBAAC,EAAD,CAAgBxF,KAAM0E,IACtB,yBAAK1B,UAAU,UACb,4BAAQA,UAAU,OAAOkD,QArCL,WAC1BzB,EAAQP,OAoCF,cC3IViC,8BAAoB,eAAgB,CAClCC,MAAO,CACL,CAAEC,QAAS,sBAAuBC,OAAQ,+BAE5CC,IAAK,CACH,CAAEF,QAAS,sBAAuBC,OAAQ,mCAK9C,IAAMtG,EAAO,CACX,CAAEwG,KAAM,OAAQ5F,KAAM,QAAS6F,MAAO,KACtC,CAAED,KAAM,OAAQ5F,KAAM,QAAS6F,MAAO,MACtC,CAAED,KAAM,OAAQ5F,KAAM,QAAS6F,MAAO,KACtC,CAAED,KAAM,OAAQ5F,KAAM,QAAS6F,MAAO,MACtC,CAAED,KAAM,OAAQ5F,KAAM,WAAY6F,MAAO,KACzC,CAAED,KAAM,OAAQ5F,KAAM,WAAY6F,MAAO,KACzC,CAAED,KAAM,OAAQ5F,KAAM,WAAY6F,MAAO,MACzC,CAAED,KAAM,OAAQ5F,KAAM,WAAY6F,MAAO,KACzC,CAAED,KAAM,OAAQ5F,KAAM,SAAU6F,MAAO,KACvC,CAAED,KAAM,OAAQ5F,KAAM,SAAU6F,MAAO,KACvC,CAAED,KAAM,OAAQ5F,KAAM,SAAU6F,MAAO,KACvC,CAAED,KAAM,OAAQ5F,KAAM,SAAU6F,MAAO,MA8B1BC,MAnBf,WACE,OACE,kBAAC,QAAD,CACEnG,QAAS,CAAC,GAAI,GAAI,GAAI,IACtBoG,aAAc,GACdnG,SAAO,EACPH,OAAQ,IACRC,MAAO,IACPN,KAAMA,GAEN,kBAAC,aAAD,CAAY4G,WAAS,IACrB,kBAAC,UAAD,CAASC,aAAa,IACtB,kBAAC,WAAD,CAAU9F,SAAS,aAAaD,MAAM,OAAOH,OAAO,UACpD,kBAAC,cAAD,CAAaC,KAAK,oBCnDXkG,EAAO,WAClB,OACE,yBACEvH,MAAO,CACLwH,QAAS,OACTC,eAAgB,eAChBC,WAAY,SACZC,SAAU,SAGZ,kBAACC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACC,EAAD,MACA,kBAACC,EAAD,MACA,kBAAC,EAAD,QCfNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1d0c5c73.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  G2,\r\n  Chart,\r\n  Tooltip,\r\n  Interval,\r\n  Interaction,\r\n  registerTheme,\r\n} from 'bizcharts';\r\nregisterTheme('default', {\r\n  defaultColor: '#505050',\r\n  // 颜色序列\r\n  colors10: [\r\n    '#125CCC',\r\n    '#198BFB',\r\n    '#FFC93D',\r\n    '#FF756C',\r\n    '#E86452',\r\n    '#6DC8EC',\r\n    '#945FB9',\r\n    '#FF9845',\r\n    '#1E9493',\r\n    '#FF99C3',\r\n  ],\r\n  geometries: {\r\n    interval: {\r\n      rect: {\r\n        default: {\r\n          style: { fill: '#6DC8EC', fillOpacity: 0.95 },\r\n        },\r\n        active: { style: { stroke: '#5AD8A6', lineWidth: 1 } },\r\n        inactive: { style: { fillOpacity: 0.3, strokeOpacity: 0.3 } },\r\n        selected: {},\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst data = [\r\n  { name: 'London', month: 'Jan.', avgRainfall: 18.9 },\r\n  { name: 'London', month: 'Feb.', avgRainfall: 28.8 },\r\n  { name: 'London', month: 'Mar.', avgRainfall: 39.3 },\r\n  { name: 'London', month: 'Apr.', avgRainfall: 20.4 },\r\n  { name: 'London', month: 'May', avgRainfall: 47 },\r\n  { name: 'London', month: 'Jun.', avgRainfall: 20.3 },\r\n  { name: 'London', month: 'Jul.', avgRainfall: 24 },\r\n  { name: 'London', month: 'Aug.', avgRainfall: null },\r\n  { name: 'Paris', month: 'Jan.', avgRainfall: 19.9 },\r\n  { name: 'Paris', month: 'Feb.', avgRainfall: 28.8 },\r\n  { name: 'Paris', month: 'Mar.', avgRainfall: 29.3 },\r\n  { name: 'Paris', month: 'Apr.', avgRainfall: null },\r\n  { name: 'Paris', month: 'May', avgRainfall: 67 },\r\n  { name: 'Paris', month: 'Jun.', avgRainfall: null },\r\n  { name: 'Paris', month: 'Jul.', avgRainfall: 23 },\r\n  { name: 'Paris', month: 'Aug.', avgRainfall: null },\r\n  { name: 'Berlin', month: 'Jan.', avgRainfall: 12.4 },\r\n  { name: 'Berlin', month: 'Feb.', avgRainfall: 23.2 },\r\n  { name: 'Berlin', month: 'Mar.', avgRainfall: 34.5 },\r\n  { name: 'Berlin', month: 'Apr.', avgRainfall: null },\r\n  { name: 'Berlin', month: 'May', avgRainfall: 52.6 },\r\n  { name: 'Berlin', month: 'Jun.', avgRainfall: 35.5 },\r\n  { name: 'Berlin', month: 'Jul.', avgRainfall: 37.4 },\r\n  { name: 'Berlin', month: 'Aug.', avgRainfall: 42.4 },\r\n  { name: 'Berli', month: 'Jan.', avgRainfall: 2.4 },\r\n  { name: 'Berli', month: 'Feb.', avgRainfall: 13.2 },\r\n  { name: 'Berli', month: 'Mar.', avgRainfall: 54.5 },\r\n  { name: 'Berli', month: 'Apr.', avgRainfall: null },\r\n  { name: 'Berli', month: 'May', avgRainfall: 52.6 },\r\n  { name: 'Berli', month: 'Jun.', avgRainfall: 65.5 },\r\n  { name: 'Berli', month: 'Jul.', avgRainfall: 57.4 },\r\n  { name: 'Berli', month: 'Aug.', avgRainfall: 32.4 },\r\n];\r\n\r\nconst scale = {\r\n  month: {\r\n    alias: '月份',\r\n  },\r\n  avgRainfall: {\r\n    alias: '月均降雨量',\r\n  },\r\n};\r\n\r\nfunction HistogramGraph() {\r\n  return (\r\n    <div>\r\n      <Chart\r\n        height={500}\r\n        width={500}\r\n        padding='auto'\r\n        data={data}\r\n        autoFit\r\n        filter={[['avgRainfall', (val) => val != null]]}\r\n      >\r\n        <Interval\r\n          adjust={[\r\n            {\r\n              type: 'dodge',\r\n              marginRatio: 0,\r\n            },\r\n          ]}\r\n          color='name'\r\n          position='month*avgRainfall'\r\n        />\r\n        <Tooltip shared />\r\n        <Interaction type='active-region' />\r\n      </Chart>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HistogramGraph;\r\n","import React from 'react';\r\nimport {\r\n  Chart,\r\n  registerShape,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Interval,\r\n  Interaction,\r\n  Coordinate,\r\n  registerTheme,\r\n} from 'bizcharts';\r\nregisterTheme('default', {\r\n  defaultColor: '#505050',\r\n  // 颜色序列\r\n  colors10: [\r\n    '#125CCC',\r\n    '#198BFB',\r\n    '#FFC93D',\r\n    '#FF756C',\r\n    '#E86452',\r\n    '#6DC8EC',\r\n    '#945FB9',\r\n    '#FF9845',\r\n    '#1E9493',\r\n    '#FF99C3',\r\n  ],\r\n  geometries: {\r\n    interval: {\r\n      rect: {\r\n        default: {\r\n          style: { fill: '#6DC8EC', stroke: 'red', fillOpacity: 0.95 },\r\n        },\r\n        active: { style: { stroke: '#5AD8A6', lineWidth: 1 } },\r\n        inactive: { style: { fillOpacity: 0.3, strokeOpacity: 0.3 } },\r\n        selected: {},\r\n      },\r\n    },\r\n  },\r\n});\r\nconst data = [\r\n  {\r\n    type: 'section-1',\r\n    value: 20,\r\n  },\r\n  {\r\n    type: 'section-2',\r\n    value: 18,\r\n  },\r\n  {\r\n    type: 'section-3',\r\n    value: 32,\r\n  },\r\n  {\r\n    type: 'section-4',\r\n    value: 15,\r\n  },\r\n]; // 可以通过调整这个数值控制分割空白处的间距，0-1 之间的数值\r\n\r\nconst sliceNumber = 0.0; // 自定义 other 的图形，增加两条线\r\n\r\nregisterShape('interval', 'sliceShape', {\r\n  draw(cfg, container) {\r\n    const points = cfg.points;\r\n    let path = [];\r\n    path.push(['M', points[0].x, points[0].y]);\r\n    path.push(['L', points[1].x, points[1].y - sliceNumber]);\r\n    path.push(['L', points[2].x, points[2].y - sliceNumber]);\r\n    path.push(['L', points[3].x, points[3].y]);\r\n    path.push('Z');\r\n    path = this.parsePath(path);\r\n    return container.addShape('path', {\r\n      attrs: {\r\n        fill: cfg.color,\r\n        path: path,\r\n      },\r\n    });\r\n  },\r\n});\r\n\r\nclass SliderChart extends React.Component {\r\n  render() {\r\n    return (\r\n      <Chart data={data} height={400} width={400} autoFit>\r\n        <Coordinate type='theta' radius={0.8} innerRadius={0.75} />\r\n        <Axis visible={false} />\r\n        <Tooltip showTitle={false} />\r\n        <Interval\r\n          adjust='stack'\r\n          position='value'\r\n          color='type'\r\n          shape='sliceShape'\r\n        />\r\n        <Interaction type='element-single-selected' />\r\n      </Chart>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SliderChart;\r\n","import React from 'react';\r\nimport {\r\n  G2,\r\n  Chart,\r\n  Tooltip,\r\n  Interval,\r\n  Interaction,\r\n  registerTheme,\r\n} from 'bizcharts';\r\nregisterTheme('default', {\r\n  defaultColor: '#505050',\r\n  // 颜色序列\r\n  colors10: [\r\n    '#125CCC',\r\n    '#198BFB',\r\n    '#FFC93D',\r\n    '#FF756C',\r\n    '#E86452',\r\n    '#6DC8EC',\r\n    '#945FB9',\r\n    '#FF9845',\r\n    '#1E9493',\r\n    '#FF99C3',\r\n  ],\r\n  geometries: {\r\n    interval: {\r\n      rect: {\r\n        default: {\r\n          style: { fill: '#6DC8EC', fillOpacity: 0.95 },\r\n        },\r\n        active: { style: { stroke: '#5AD8A6', lineWidth: 1 } },\r\n        inactive: { style: { fillOpacity: 0.3, strokeOpacity: 0.3 } },\r\n        selected: {},\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst data = [\r\n  { name: 'London', month: 'Jan.', avgRainfall: 18.9 },\r\n  { name: 'London', month: 'Feb.', avgRainfall: 28.8 },\r\n  { name: 'London', month: 'Mar.', avgRainfall: 39.3 },\r\n  { name: 'London', month: 'Apr.', avgRainfall: 20.4 },\r\n  { name: 'London', month: 'May', avgRainfall: 47 },\r\n  { name: 'London', month: 'Jun.', avgRainfall: 20.3 },\r\n  { name: 'London', month: 'Jul.', avgRainfall: 24 },\r\n  { name: 'London', month: 'Aug.', avgRainfall: null },\r\n  { name: 'Paris', month: 'Jan.', avgRainfall: 19.9 },\r\n  { name: 'Paris', month: 'Feb.', avgRainfall: 28.8 },\r\n  { name: 'Paris', month: 'Mar.', avgRainfall: 29.3 },\r\n  { name: 'Paris', month: 'Apr.', avgRainfall: null },\r\n  { name: 'Paris', month: 'May', avgRainfall: 67 },\r\n  { name: 'Paris', month: 'Jun.', avgRainfall: null },\r\n  { name: 'Paris', month: 'Jul.', avgRainfall: 23 },\r\n  { name: 'Paris', month: 'Aug.', avgRainfall: null },\r\n];\r\n\r\nconst scale = {\r\n  month: {\r\n    alias: '月份',\r\n  },\r\n  avgRainfall: {\r\n    alias: '月均降雨量',\r\n  },\r\n};\r\n\r\nfunction Grouped() {\r\n  return (\r\n    <div>\r\n      <Chart\r\n        height={500}\r\n        width={500}\r\n        padding='auto'\r\n        data={data}\r\n        autoFit\r\n        filter={[\r\n          ['avgRainfall', (val) => val != null], // 图表将会只渲染过滤后的数据\r\n        ]}\r\n      >\r\n        <Interval\r\n          adjust={[\r\n            {\r\n              type: 'dodge',\r\n              marginRatio: 0,\r\n            },\r\n          ]}\r\n          color='name'\r\n          position='month*avgRainfall'\r\n        />\r\n        <Tooltip shared />\r\n        <Interaction type='active-region' />\r\n      </Chart>\r\n      {/* <Chart\r\n        height={400}\r\n        scale={scale}\r\n        autoFit\r\n        data={data}\r\n        interactions={['active-region']}\r\n        appendPadding={[20, 0, 0, 0]}\r\n      >\r\n        <Interval position='year*sales' color='year' />\r\n        <Tooltip shared />\r\n      </Chart> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grouped;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LinearGradient = props => {\r\n  const { data } = props;\r\n  const boxStyle = {\r\n    width: 180,\r\n    margin: 'auto'\r\n  };\r\n  const gradientStyle = {\r\n    backgroundImage: `linear-gradient(to right, ${data.fromColor} , ${data.toColor})`,\r\n    height: 20\r\n  };\r\n  return (\r\n    <div>\r\n      <div style={boxStyle} className=\"display-flex\">\r\n        <span>{data.min}</span>\r\n        <span className=\"fill\"></span>\r\n        <span>{data.max}</span>\r\n      </div>\r\n      <div style={{ ...boxStyle, ...gradientStyle }} className=\"mt8\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLinearGradient.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nexport default LinearGradient;\r\n","import React, { useState } from 'react';\r\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\r\nimport { scaleQuantile } from 'd3-scale';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport LinearGradient from './LinearGradient.js';\r\n\r\nconst INDIA_TOPO_JSON = require('./india.topo.json');\r\n\r\nconst PROJECTION_CONFIG = {\r\n  scale: 350,\r\n  center: [78.9629, 22.5937], // always in [East Latitude, North Longitude]\r\n};\r\n\r\n// Red Variants\r\nconst COLOR_RANGE = [\r\n  '#ffedea',\r\n  '#929FCB',\r\n  '#56ABFF',\r\n  '#198BFB',\r\n  '#263F97',\r\n  '#0F287D',\r\n  '#FF756C',\r\n];\r\n\r\nconst DEFAULT_COLOR = '#EEE';\r\n\r\nconst getRandomInt = () => {\r\n  return parseInt(Math.random() * 100);\r\n};\r\n\r\nconst geographyStyle = {\r\n  default: {\r\n    outline: 'none',\r\n  },\r\n  hover: {\r\n    fill: '#ccc',\r\n    transition: 'all 250ms',\r\n    outline: 'none',\r\n  },\r\n  pressed: {\r\n    outline: 'none',\r\n  },\r\n};\r\n\r\n// will generate random heatmap data on every call\r\nconst getHeatMapData = () => {\r\n  return [\r\n    { id: 'AP', state: 'Andhra Pradesh', value: getRandomInt() },\r\n    { id: 'AR', state: 'Arunachal Pradesh', value: getRandomInt() },\r\n    { id: 'AS', state: 'Assam', value: getRandomInt() },\r\n    { id: 'BR', state: 'Bihar', value: getRandomInt() },\r\n    { id: 'CT', state: 'Chhattisgarh', value: getRandomInt() },\r\n    { id: 'GA', state: 'Goa', value: 21 },\r\n    { id: 'GJ', state: 'Gujarat', value: 22 },\r\n    { id: 'HR', state: 'Haryana', value: getRandomInt() },\r\n    { id: 'HP', state: 'Himachal Pradesh', value: 24 },\r\n    { id: 'JH', state: 'Jharkhand', value: 26 },\r\n    { id: 'KA', state: 'Karnataka', value: 27 },\r\n    { id: 'KL', state: 'Kerala', value: getRandomInt() },\r\n    { id: 'MP', state: 'Madhya Pradesh', value: getRandomInt() },\r\n    { id: 'MH', state: 'Maharashtra', value: getRandomInt() },\r\n    { id: 'MN', state: 'Manipur', value: getRandomInt() },\r\n    { id: 'ML', state: 'Meghalaya', value: 59 },\r\n    { id: 'MZ', state: 'Mizoram', value: getRandomInt() },\r\n    { id: 'NL', state: 'Nagaland', value: 59 },\r\n    { id: 'OR', state: 'Odisha', value: 59 },\r\n    { id: 'PB', state: 'Punjab', value: getRandomInt() },\r\n    { id: 'RJ', state: 'Rajasthan', value: getRandomInt() },\r\n    { id: 'SK', state: 'Sikkim', value: getRandomInt() },\r\n    { id: 'TN', state: 'Tamil Nadu', value: getRandomInt() },\r\n    { id: 'TG', state: 'Telangana', value: getRandomInt() },\r\n    { id: 'TR', state: 'Tripura', value: 14 },\r\n    { id: 'UT', state: 'Uttarakhand', value: getRandomInt() },\r\n    { id: 'UP', state: 'Uttar Pradesh', value: 15 },\r\n    { id: 'WB', state: 'West Bengal', value: 17 },\r\n    { id: 'WB', state: 'West Bengal', value: 17 },\r\n    { id: 'AN', state: 'Andaman and Nicobar Islands', value: getRandomInt() },\r\n    { id: 'CH', state: 'Chandigarh', value: getRandomInt() },\r\n    { id: 'DN', state: 'Dadra and Nagar Haveli', value: 19 },\r\n    { id: 'DD', state: 'Daman and Diu', value: 20 },\r\n    { id: 'DL', state: 'Delhi', value: 59 },\r\n    { id: 'JK', state: 'Jammu and Kashmir', value: 25 },\r\n    { id: 'LA', state: 'Ladakh', value: getRandomInt() },\r\n    { id: 'LD', state: 'Lakshadweep', value: getRandomInt() },\r\n    { id: 'PY', state: 'Puducherry', value: getRandomInt() },\r\n  ];\r\n};\r\n\r\nfunction App() {\r\n  const [tooltipContent, setTooltipContent] = useState('');\r\n  const [data, setData] = useState(getHeatMapData());\r\n\r\n  const gradientData = {\r\n    fromColor: COLOR_RANGE[0],\r\n    toColor: COLOR_RANGE[COLOR_RANGE.length - 1],\r\n    min: 0,\r\n    max: data.reduce((max, item) => (item.value > max ? item.value : max), 0),\r\n  };\r\n\r\n  const colorScale = scaleQuantile()\r\n    .domain(data.map((d) => d.value))\r\n    .range(COLOR_RANGE);\r\n\r\n  const onMouseEnter = (geo, current = { value: 'NA' }) => {\r\n    return () => {\r\n      setTooltipContent(`${geo.properties.name}: ${current.value}`);\r\n    };\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    setTooltipContent('');\r\n  };\r\n\r\n  const onChangeButtonClick = () => {\r\n    setData(getHeatMapData());\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '500px', height: 'auto' }}>\r\n      <div className='full-width-height container'>\r\n        <h1 className='no-margin center'>India and States</h1>\r\n        <ReactTooltip>{tooltipContent}</ReactTooltip>\r\n        <ComposableMap\r\n          projectionConfig={PROJECTION_CONFIG}\r\n          projection='geoMercator'\r\n          width={250}\r\n          height={220}\r\n          data-tip=''\r\n        >\r\n          <Geographies geography={INDIA_TOPO_JSON}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => {\r\n                //console.log(geo.id);\r\n                const current = data.find((s) => s.id === geo.id);\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    fill={current ? colorScale(current.value) : DEFAULT_COLOR}\r\n                    style={geographyStyle}\r\n                    onMouseEnter={onMouseEnter(geo, current)}\r\n                    onMouseLeave={onMouseLeave}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ComposableMap>\r\n        <LinearGradient data={gradientData} />\r\n        <div className='center'>\r\n          <button className='mt16' onClick={onChangeButtonClick}>\r\n            Change\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  Chart,\r\n  Interval,\r\n  Interaction,\r\n  registerInteraction,\r\n  Tooltip,\r\n  Coordinate,\r\n} from 'bizcharts';\r\n\r\nregisterInteraction('element-link', {\r\n  start: [\r\n    { trigger: 'interval:mouseenter', action: 'element-link-by-color:link' },\r\n  ],\r\n  end: [\r\n    { trigger: 'interval:mouseleave', action: 'element-link-by-color:unlink' },\r\n  ],\r\n});\r\n\r\n// 数据源\r\nconst data = [\r\n  { year: '2014', type: 'Sales', sales: 1000 },\r\n  { year: '2015', type: 'Sales', sales: 1170 },\r\n  { year: '2016', type: 'Sales', sales: 660 },\r\n  { year: '2017', type: 'Sales', sales: 1030 },\r\n  { year: '2014', type: 'Expenses', sales: 400 },\r\n  { year: '2015', type: 'Expenses', sales: 460 },\r\n  { year: '2016', type: 'Expenses', sales: 1120 },\r\n  { year: '2017', type: 'Expenses', sales: 540 },\r\n  { year: '2014', type: 'Profit', sales: 300 },\r\n  { year: '2015', type: 'Profit', sales: 300 },\r\n  { year: '2016', type: 'Profit', sales: 300 },\r\n  { year: '2017', type: 'Profit', sales: 350 },\r\n];\r\n\r\nconst scale = {\r\n  sales: {\r\n    max: 2400,\r\n    tickInterval: 600,\r\n    nice: true,\r\n  },\r\n};\r\n\r\nfunction Demo() {\r\n  return (\r\n    <Chart\r\n      padding={[10, 20, 50, 40]}\r\n      borderRadius={10}\r\n      autoFit\r\n      height={500}\r\n      width={400}\r\n      data={data}\r\n    >\r\n      <Coordinate transpose />\r\n      <Tooltip showMarkers={false} />\r\n      <Interval position='year*sales' color='type' adjust='stack' />\r\n      <Interaction type='active-region' />\r\n      {/* <Interaction type='element-link' /> */}\r\n    </Chart>\r\n  );\r\n}\r\n\r\nexport default Demo;\r\n","import React from 'react';\r\nimport HistogramGraph from './HistogramGraph';\r\nimport PieChart from './PieChart';\r\nimport HistogramTwoColumnChart from './HistogramTwoColumnChart';\r\nimport IndiaChart from './IndiaChart';\r\nimport Horizontal from './HorizontalBarChart';\r\nexport const Main = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n      }}\r\n    >\r\n      <IndiaChart />\r\n      <HistogramGraph />\r\n      <PieChart />\r\n      <HistogramTwoColumnChart />\r\n      <Horizontal />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Main } from './main';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}